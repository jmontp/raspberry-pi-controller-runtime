profile:
  name: mock_pi_default
  controller: pi_mock

# Canonical signal ordering for the runtime buffers
input_signals:
  - { name: knee_flexion_angle_ipsi_rad, hardware: imu }
  - { name: knee_flexion_velocity_ipsi_rad_s, hardware: imu }
  - { name: ankle_dorsiflexion_angle_ipsi_rad, hardware: imu }
  - { name: ankle_dorsiflexion_velocity_ipsi_rad_s, hardware: imu }
  - { name: vertical_grf_ipsi_N, hardware: vertical_grf, required: false, default: 0.0 }

output_signals:
  - { name: knee_flexion_moment_ipsi_Nm, hardware: mock_actuator }
  - { name: ankle_dorsiflexion_moment_ipsi_Nm, hardware: mock_actuator }

hardware:
  sensors:
    imu:
      class: rpc_runtime.sensors.imu.mock.MockIMU
      config:
        loop: true
    vertical_grf:
      class: rpc_runtime.sensors.grf.mock.MockVerticalGRF
      config: {}
  actuators:
    mock_actuator:
      class: rpc_runtime.actuators.mock.MockActuator
      config: {}

controllers:
  pi_mock:
    implementation: rpc_runtime.controllers.pi_controller.PIController
    joints: ["knee", "ankle"]
    description: "Mock PI controller bundle for development and testing."
    config:
      dt: 0.01
      torque_scale: 0.1
      torque_limit_nm: 10.0
      gains:
        kp:
          knee: 0.0
          ankle: 0.0
        ki:
          knee: 0.0
          ankle: 0.0
    torque_model:
      implementation: rpc_runtime.controllers.torque_models.mock.MockTorqueModel
      config:
        outputs:
          knee: 0.0
          ankle: 0.0
